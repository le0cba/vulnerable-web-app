name: SAST_Scan
on:
  workflow_call:
    secrets:
      SONAR_TOKEN:
        required: true
  
jobs:
  gitleaks-scan:
    name: gitleaks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  trivy:
    name: trivy    
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build an image from Dockerfile
        run: |
          docker build -t docker.io/my-organization/my-app:${{ github.sha }} .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/my-organization/my-app:${{ github.sha }}'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
      

  anchore:
    name: anchore_scan
    runs-on: ubuntu-latest
    needs: trivy
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Docker Build 
        run: |
          docker build -t anchore-image:${{ github.sha }} .

      - name: anchore_scan
        uses: anchore/scan-action@v3
        continue-on-error: true
        id: scan
        with:
          image: anchore-image:${{ github.sha }}
          fail-build: false
          severity-cutoff: high
          acs-report-enable: true          

      - name: Upload SARIF File
        if: always()
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Inspect action SARIF report
        run: cat ${{ steps.scan.outputs.sarif }}


  checkov:
    name: checkov
    runs-on: ubuntu-latest
    needs: trivy
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Checkov
        uses: bridgecrewio/checkov-action@master
        continue-on-error: true 
        with:
          directory: .
          framework: all
          quiet: true
          soft_fail: true
          download_external_modules: true
          log_level: INFO # One of: INFO, WARNING, DEBUG
          output_format: sarif
      - name: Upload Sarif file
        if: always()
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif
  
  sonar-cloud:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}  
          SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
        with:
          projectBaseDir: . 
          args: >
            -Dsonar.projectKey=${{secrets.SONAR_PROJECT_KEY}}
            -Dsonar.organization=${{secrets.SONAR_ORGANIZATION}}  
            -Dsonar.source=. 
            -Dsonar.sourceEncoding=UTF-8 

  snyk_docker:
    name: snyk_docker
    runs-on: ubuntu-latest
    permissions:
      # required for all workflows
      security-events: write
    steps:
      ## Checkout is required since Snyk needs the Dockerfile for the Sarif report
      - name: Checkout repository
        uses: actions/checkout@master
      - name: Docker Build
        run: |
          docker build -t image-snyk:${{ github.sha }} . 
      - name: Snyk
        uses: snyk/actions/docker@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: image-snyk:${{ github.sha }}
          args: >
            --file=Dockerfile
            --severity-threshold=high
      - name: Upload SARIF File as json
        uses: actions/upload-artifact@v3
        with:
          name: snyk_docker
          path: synkscan-docker-config.json
  snyk_scan_code:
    name: Snyk Code
    runs-on: ubuntu-latest
    needs: snyk_docker
    permissions:
      # required for all workflows
      security-events: write
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: Upload SARIF File as json
        uses: actions/upload-artifact@v3
        with:
          name: synkscan
          path: synkscan-config.json